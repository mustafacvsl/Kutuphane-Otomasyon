<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>